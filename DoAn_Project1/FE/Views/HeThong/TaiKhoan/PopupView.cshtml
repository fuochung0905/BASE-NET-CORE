@* @model MODELS.HETHONG.MODELTaiKhoan

@{
    string beAddress = new ConfigurationBuilder().AddJsonFile("appsettings.json").Build().GetSection("BEFileUrl").Value.ToString();
}
<style>
    .profile-pic {
        color: transparent;
        transition: all 0.3s ease;
        display: flex;
        /*justify-content: center;*/
        align-items: center;
    }

    .profile-pic input {
        display: none;
    }

    .profile-pic img {
        position: absolute;
        object-fit: cover;
        width: 165px;
        height: 165px;
        box-shadow: 0 0 10px 0 rgba(255, 255, 255, 0.35);
        border-radius: 100px;
        z-index: 0;
    }

    .profile-pic .-label {
        cursor: pointer;
        height: 165px;
        width: 165px;
        margin: 0;
    }

    .profile-pic span {
        display: inline-flex;
        padding: 0.2em;
        height: 2em;
    }

    .profile-pic .k-dropzone, .profile-pic .k-upload-files {
        display: none;
    }
</style>
<script>
    $(document).ready(function () {
        $("#target input, #target textarea").prop("disabled", true);
    });

    function closePopUp() {
        refreshGrid();
        hideModal();
    }
</script>
<div class="modal-content" id="modalLoading">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmTaiKhoan" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-header">
            <h5 class="modal-title">Thông tin tài khoản</h5>
            <button type="button" class="close" onclick="closePopUp();">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body" id="target">
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.IsEdit)
            @Html.HiddenFor(model => model.AnhDaiDien)
            <div class="row">
                <div class="col-md-6">
                    <label>
                        Tên đăng nhập <span class="text-danger">*</span>
                    </label>
                    @(Html.Kendo().TextBoxFor(m => m.UserName).Enable(false).HtmlAttributes(new { @class = "form-control", @style = "width:100%;  max-width:none;" }))
                </div>
                <div class="col-md-6">
                    <label>
                        Mật khẩu <span class="text-danger">*</span>
                    </label>
                    @(Html.Kendo().TextBox().Name("txtMatKhau").Value("ai cho xem :))").HtmlAttributes(new { @class = "form-control", @style = "width:100%;  max-width:none;", @type = "Password", autocomplete = "chrome-off" }))
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label>
                        Họ và tên <span class="text-danger">*</span>
                    </label>
                    @(Html.Kendo().TextBox()
                        .Name("HoVaTen")
                        .Value(Model.HoLot + " " + Model.Ten)
                        .HtmlAttributes(new { @class = "form-control",
                            @style = "width:100%;  max-width:none;",
                            required = "",
                            validationMessage = "Họ và tên bắt buộc nhập"})
                    )
                </div>
                <div class="col-md-6">
                    <label>
                        Ngày sinh <span class="text-danger">*</span>
                    </label>
                    @(Html.Kendo().DatePickerFor(m => m.NgaySinh).Format("dd/MM/yyyy")
                        .HtmlAttributes(new
                        {
                            style = "width:100%;  max-width:none;",
                            data_val_date = "Ngày sinh không đúng định dạng!",
                        }))
                    @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label>
                        Email <span class="text-danger">*</span>
                    </label>
                    @(Html.Kendo().TextBoxFor(m => m.Email).Enable(false).HtmlAttributes(new { @class = "form-control", @style = "width:100%;  max-width:none;" }))
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label>
                        Số điện thoại <span class="text-danger">*</span>
                    </label>
                    @(Html.Kendo().TextBoxFor(m => m.SoDienThoai).Enable(false).HtmlAttributes(new { @class = "form-control", @style = "width:100%;  max-width:none;" }))
                    @Html.ValidationMessageFor(model => model.SoDienThoai, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label>
                        Đơn vị <span class="text-danger">*</span>
                    </label>
                    @(Html.Kendo().DropDownListFor(m => m.DonViId).Enable(false)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .OptionLabel("-- Chọn đơn vị --").Filter(FilterType.Contains)
                        .DataSource(source => source
                        .Custom()
                        .Transport(transport => transport
                        .Read(read =>
                        {
                            read.Action("GetList_Combobox", "DonVi");
                        })))
                        .HtmlAttributes(new { @class = "form-control", @style = "width:100%;  max-width:none;" }))
                    @Html.ValidationMessageFor(model => model.DonViId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label>
                        Phòng ban <span class="text-danger">*</span>
                    </label>
                    @(Html.Kendo().DropDownListFor(m => m.PhongBanId).Enable(false)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .OptionLabel("-- Chọn phòng ban --").Filter(FilterType.Contains)
                        .DataSource(source => source
                        .Custom()
                        .Transport(transport => transport
                        .Read(read =>
                        {
                            read.Action("GetList_ComboboxWithDonVi", "PhongBan").Data(@<text>
                                function(e) {
                                    return {
                                        donViId: "@Model.DonViId"
                                    }
                                }
                            </text>);
                        })))
                        .HtmlAttributes(new { @class = "form-control", @style = "width:100%;  max-width:none;" }))
                    @Html.ValidationMessageFor(model => model.PhongBanId, "", new { @class = "text-danger" })
                </div>          
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label>
                        Vai trò <span class="text-danger">*</span>
                    </label>
                    @(Html.Kendo().DropDownListFor(m => m.VaiTroId)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .OptionLabel("-- Chọn vai trò --").Filter(FilterType.Contains)
                        .DataSource(source => source
                            .Custom()
                            .Transport(transport => transport
                                .Read(read =>
                                {
                                    read.Action("GetList_Combobox", "VaiTro");
                                })))
                        .HtmlAttributes(new { @class = "form-control", @style = "width:100%;  max-width:none;" })
                    )
                    @Html.ValidationMessageFor(model => model.VaiTroId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-6">
                    <label>Người quản lý</label>
                    @(Html.Kendo().DropDownListFor(m => m.NguoiQuanLyId)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .OptionLabel("Không").Filter(FilterType.Contains)
                        .DataSource(source => source
                            .Custom()
                            .Transport(transport => transport
                                .Read(read =>
                                {
                                    read.Action("GetComboBoxNguoiQuanLy", "TaiKhoan");
                                })))
                        .HtmlAttributes(new { @class = "form-control", @style = "width:100%;  max-width:none;" })
                    )
                    @Html.ValidationMessageFor(model => model.NguoiQuanLyId, "", new { @class = "text-danger" })
                </div>
         
            <div class="row">
                <div class="col-md-6">
                    <label>
                        Giới tính
                    </label>
                    @(Html.Kendo().DropDownListFor(m => m.GioiTinh)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .BindTo(SYS_CONFIG.GIOI_TINH)
                        .HtmlAttributes(new { @class = "form-control", @style = "width:100%;  max-width:none;" }))
                    @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="profile-userpic">
                    <div class="profile-pic">
                        <label class="-label" for="uploadFileBase">
                            <span class="glyphicon glyphicon-camera"></span>
                            <span>Đổi ảnh đại diện</span>
                        </label>
                        @if(!string.IsNullOrEmpty(Model.AnhDaiDien))
                        {
                            <img class="img_cover img-thumbnail img_cover" id="img_AnhDaiDien" src="@(beAddress + Model.AnhDaiDien)" alt="Ảnh đại diện" width="200" />
                        }
                        else
                        {
                            <img class="img_cover img-thumbnail img_cover" id="img_AnhDaiDien" src="@(beAddress + "Files/no-image.png")" alt="Ảnh đại diện" width="200" />
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" onclick="closePopUp();"><i class="fas fa-times-square" aria-hidden="true"></i>&nbsp; Hủy</button>
        </div>
    }
</div> *@