@model MODELS.HETHONG.TAIKHOAN.Dtos.MODELPhanQuyen

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">QUẢN LÝ NHÓM QUYỀN</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Administrator</a></li>
                    <li class="breadcrumb-item active">Nhóm quyền</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        @(Html.Kendo().Grid<MODELS.HETHONG.VAITRO.Dtos.MODELNhomQuyen>()
            .Name("gridData")
            .HtmlAttributes(new { @class = "table table-hover" })
            .Columns(columns =>
            {
                columns.Select().HtmlAttributes(new { @style = "text-align:center;" }).Width(68);
                columns.Bound("").ClientTemplate("#= xoFunc.renderNumberGrid() #").Title("STT").Width(72).Filterable(false).Sortable(false).HtmlAttributes(new { @class = "text-center" });
                columns.Bound(c => c.TenGoi).Title("Tên gọi").Width(300);
                columns.Bound(c => c.Parent).Title("Nhóm cha").Width(153);
                columns.Bound(c => c.Icon).Title("Icon").Width(191);
                columns.Bound(c => c.Sort).Title("Sắp xếp").Width(153).HtmlAttributes(new { @style = "text-align: right" });
                columns.Bound(c => c.IsActived).Title("Trạng thái").ClientTemplate(
                "# if(IsActived) { #" + //Trạng thái đang hoạt động
                "<button type='button' class='btn btn-outline-success btn-sm btn-flat'>Đang hoạt động</button>" +
                "# } else { #" +  //Trạng thái không hoạt động (màu đỏ)
                "<button type='button' class='btn btn-outline-danger btn-sm btn-flat'>Không hoạt động</button>" +
                "# } #").Width(153).HtmlAttributes(new { @class = "text-center" });
            })
            .Sortable()
            .ToolBar(toolbar =>
            {
                toolbar.ClientTemplateId("GridToolbarTemplate");
            })
            .Resizable(x => x.Columns(true))
            //.Filterable(TelerikGridHelper.CustomStringFilterOperator())
            .Pageable()
            .EnableCustomBinding(true)
            .PersistSelection()
            .Scrollable()
            .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("GetList", "NhomQuyen"))
            .PageSize(SYS_CONFIG.PAGE_SIZE_DEFAULT)
            .Events(e => e.Error("xoFunc.onErrorGrid"))
            )
            .Events(e => { e.DataBinding("xoFunc.onDataBindingGrid"); })
            .Pageable(pager => pager
            .Refresh(true).Input(true).Numeric(false)
            .PageSizes(SYS_CONFIG.PAGE_SIZES))
            .NoRecords(n => n.Template("Không có dữ liệu"))
            )
    </div>
    <!-- /.container-fluid -->
</section>

@*TOOLBAR TEMPLATE*@
<script id="GridToolbarTemplate" type="text/x-kendo-template">
    @{
         <div style="width:100%;">
            <div style="width:70%;">
                <a class="btn btn-success ml-1" type="button" onclick="themThongTin_NhomQuyen()"><i class="fa fa-plus" aria-hidden="true"></i>&nbsp; Thêm mới </a>
                <a class="btn btn-primary ml-1" type="button" onclick="suaThongTin_NhomQuyen()"><i class="fas fa-wrench"></i>&nbsp; Cập nhật </a>
            </div>
        </div>
    }
</script>

<script>
    function getListIdSelected() {
        var g = $("#gridData").getKendoGrid();
        return g.selectedKeyNames();
    }

    //Xem thông tin.
    function xemThongTin() {
        var itemSelectedIds = getListIdSelected();
        if(!checkMultiSelectInGrid(itemSelectedIds))
        {
            return;
        }

        var url = '@Url.Action("ShowViewPopup", "NhomQuyen")' + "?id=" + itemSelectedIds[0];

        showModal(url, "sm");
    }

    //Thêm thông tin.
    function themThongTin_NhomQuyen() {
        var url = '@Url.Action("ShowInsertPopup", "NhomQuyen")';

        showModal(url, "sm");
    }

    //Sửa thông tin.
    function suaThongTin_NhomQuyen() {
        var itemSelectedIds = getListIdSelected();
        if(!checkMultiSelectInGrid(itemSelectedIds))
        {
            return;
        }

        var url = '@Url.Action("ShowUpdatePopup", "NhomQuyen")' + "?id=" + itemSelectedIds[0];

        showModal(url, "sm");
    }

    //Phân quyền.
    function phanQuyen() {
        var itemSelectedIds = getListIdSelected();
        if(!checkMultiSelectInGrid(itemSelectedIds))
        {
            return;
        }

        var url = '@Url.Action("ShowPhanQuyenPopup", "NhomQuyen")' + "?id=" + itemSelectedIds[0];

        $.get(url, function (data) {
            $('#modelContainerPhanQuyen').html(data);
            $('#modal-phanQuyen').modal('show');
        });
    }

    //xóa thông tin
    function xoaThongTin() {
        var itemSelectedIds = getListIdSelected();
        if (itemSelectedIds.length == 0) {
            showErrorNotify(noDataMessage);
            return;
        }

        var XoaThongTin = function () {
            showLoading(true);
            $.ajax({
                url: '@Url.Action("Delete", "NhomQuyen")',
                type: 'POST',
                dataType: 'json',
                data: {
                    listSelectedId: itemSelectedIds
                },
                success: function (data) {
                    if (data.IsSuccess) {
                        showSuccessNotify(deleteSuccess);
                        refreshGrid();
                    }
                    else {
                        showErrorNotify(data.Message);
                    }
                },
                error: function (request, status, err) {
                    showErrorNotify(errorMessage);
                }
            });
            showLoading(false);
        }
        return xoFunc.confirmDialogYesNo(deleteContent, titleConfirm, XoaThongTin);
    }

    function refreshGrid() {
        var grid = $("#gridData").data("kendoGrid");
        grid.clearSelection();
        grid.dataSource.page(1);
        grid.dataSource.read();
        showLoading(false);
    }

    function gridPhanQuyenDataFilter() {
        var filter = {
            nhomId: $('#hdNhomId').val(),
            vaiTroId: $('#hdNhomQuyenId').val()
        }
        return filter;
    }
</script>
