@model MODELS.HETHONG.TAIKHOAN.Dtos.MODELPhanQuyen
@{
    Guid giaiDoanId = Guid.Parse(ViewBag.GiaiDoanId.ToString());
    ViewBag.ScreenName = "QUẢN LÝ DỰ ÁN";
    var listtabs = ViewData["tabs"] as List<MODELS.HETHONG.TAB.Tab> ?? new List<MODELS.HETHONG.TAB.Tab>();
}

<script>
    function getListIdSelected() {
        var g = $("#gridData").getKendoGrid();
        return g.selectedKeyNames();
    }

    function gridDataFilter() {
        var loaiDuAn =  $("#FilterLoaiDuAn").data("kendoDropDownList").value();
        var giaiDoanId = $("#FilterGiaiDoanId").data("kendoDropDownList").value();
        var tuNgay = $("#FilterTuNgay").data("kendoDatePicker").value();
        var denNgay = $("#FilterDenNgay").data("kendoDatePicker").value();

        filter = {
            LoaiDuAn: loaiDuAn,
            GiaiDoanId: giaiDoanId,
            TuNgay: tuNgay === null ? tuNgay : tuNgay.toJSON(),
            DenNgay: denNgay === null ? denNgay : denNgay.toJSON(),
            TextSearch: $("#TextSearch").val()
        }
        return filter;
    }

    function resetFilter() {
        $("#FilterGiaiDoanId").data("kendoDropDownList").value("");
        $("#FilterTuNgay").data("kendoDatePicker").value("");
        $("#FilterDenNgay").data("kendoDatePicker").value("");
        refreshGrid();
    }
</script>

<!-- Content Header (Page header) -->
<!--<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">-->
                @*<h1 class="m-0">QUẢN LÝ DỰ ÁN</h1>*@
            <!--</div>--><!-- /.col -->
            <!--<div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Dự án</a></li>
                    <li class="breadcrumb-item active">Quản lý dự án</li>
                </ol>
            </div>--><!-- /.col -->
        <!--</div>--><!-- /.row -->
    <!--</div>--><!-- /.container-fluid -->
<!--</div>-->
<!-- Main content -->


    @await Component.InvokeAsync("Navtabs", new { tabs = listtabs, activeTab = "QuanLyDuAn", navId = "mynavtabs" })
    <div class="tab-content active" id="QuanLyDuAnIndexTab">
        <section class="content">
            <div class="container-fluid">
                @if (Model.IsXem)
                {
                    <!--FILTER-->
                    <div id="accordion">
                        <div class="card card-info">

                            <div id="divFilter" class="collapse" data-parent="#accordion" style="">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6 col-lg-6 col-xl-3">
                                            @(Html.Kendo().DropDownList().Name("FilterGiaiDoanId")
                                                .DataTextField("Text")
                                                .DataValueField("Value")
                                                .OptionLabel("-- Tất cả giai đoạn --")
                                                .Filter(FilterType.Contains)
                                                .DataSource(source => source
                                                .Custom()
                                                .Transport(transport => transport
                                                .Read(read => { read.Action("GetAllComboBox", "GiaiDoanDuAn"); })
                                                )
                                                )
                                                .Value(@ViewBag.GiaiDoanId.ToString())
                                                .HtmlAttributes(new { @class = "form-control form-control-sm", @style = "width:100%;  max-width:none;" })
                                                )
                                        </div>
                                        <div class="col-md-6 col-lg-6 col-xl-3">
                                            @(Html.Kendo().DropDownList()
                                                .Name("FilterLoaiDuAn")
                                                .OptionLabel("-- Tất cả loại dự án --")
                                                .DataTextField("Text")
                                                .DataValueField("Value")
                                                .BindTo(SYS_CONFIG.LOAIDUAN)
                                                .HtmlAttributes(new { @class = "form-control", @style = "width:100%;  max-width:none;" }))
                                        </div>
                                        <div class="col-md-6 col-lg-6 col-xl-3">
                                            @(Html.Kendo().DatePicker().Name("FilterTuNgay")
                                                .Format("dd/MM/yyyy").Value(DateTime.ParseExact("01/01/" + DateTime.Now.Year, "dd/MM/yyyy", null))
                                                .HtmlAttributes(new { @class = "form-control", @style = "width: 100%; max-width: none;", @placeholder = "Từ ngày" })
                                                )
                                        </div>
                                        <div class="col-md-6 col-lg-6 col-xl-3">
                                            @(Html.Kendo().DatePicker().Name("FilterDenNgay")
                                                .Format("dd/MM/yyyy").Value(DateTime.Now)
                                                .HtmlAttributes(new { @class = "form-control", @style = "width: 100%; max-width: none;", @placeholder = "Đến ngày" })
                                                )
                                        </div>
                                        <div class="col-sm-12 col-md-6 col-lg-6 col-xl-3 d-flex" style="gap: 8px; padding-bottom: 0.3rem;">
                                            <button class="btn btn-success" onclick="refreshGrid()"><i class="fa fa-filter"></i> Lọc</button>
                                            <button class="btn btn-primary" onclick="resetFilter()"><i class="fa fa-undo"></i> Đặt lại</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--END FILTER-->
                    @(Html.Kendo().Grid<MODELS.DUAN.QUANLYDUAN.Dtos.MODELQuanLyDuAn>()
                        .Name("gridData")
                        .HtmlAttributes(new { @class = "table table-hover" })
                        .Columns(columns =>
                        {
                            columns.Select().HtmlAttributes(new { @style = "text-align:center;" }).Width(68).Lockable(true).Locked();

                            columns.Bound("").ClientTemplate("#= xoFunc.renderNumberGrid() #").Title("STT")
                            .Width(72).Filterable(false).Sortable(false).HtmlAttributes(new { @class = "text-center" }).Lockable(true).Locked();

                            columns.Bound(c => c.MaDuAn).Title("Mã dự án")
                            .Width(153).HtmlAttributes(new { @style = "text-align: center;" }).Lockable(true).Locked();

                            columns.Bound(c => c.TenDuAn).HtmlAttributes(new { @class = "title" }).Title("Tên dự án").Width(319).Lockable(true).Locked();
                            columns.Bound(c => c.ChiPhiHoSo).Title("Chi phí hồ sơ").HtmlAttributes(new { @class = "title-number" }).Width(94).HtmlAttributes(new { @style = "text-align: right;" });
                            columns.Bound(c => c.ChiPhiTrienKhai).Title("Chi phí triển khai").HtmlAttributes(new { @class = "title-number" }).Width(94).HtmlAttributes(new { @style = "text-align: right;" });
                            columns.Bound(c => c.ChiPhiCode).Title("Chi phí code").HtmlAttributes(new { @class = "title-number" }).Width(94).HtmlAttributes(new { @style = "text-align: right;" });
                            columns.Bound(c => c.ChuDauTu).Title("Chủ đầu tư").Width(191);
                            columns.Bound(c => c.GiaiDoan).Title("Giai đoạn").Width(131);
                            columns.Bound(c => c.IsActived).Title("Loại dự án").ClientTemplate(
                            "# if(LoaiDuAn == 1) { #" +
                            "<span type='button' class=' btn-sm btn-flat'>OutSource</span>" +
                            "# } if(LoaiDuAn ==2) { #" +
                            "<span type='button' class=' btn-sm btn-flat'>Khoán phòng</span>" +
                            "# } if(LoaiDuAn ==3) { #" +
                            "<span type='button' class=' btn-sm btn-flat'>Tư vấn</span># } #").Width(153).HtmlAttributes(new { @class = "text-center" });
                            columns.Bound(c => c.ThoiGianBatDau)
                            .Title("Thời gian kết thúc")
                            .Width(153)
                            .HtmlAttributes(new { @style = "text-align: center;" })
                            .ClientTemplate(
                            "# if (ThoiGianBatDau == null || kendo.parseDate(ThoiGianBatDau) == null || kendo.toString(kendo.parseDate(ThoiGianBatDau), 'dd/MM/yyyy') == '01/01/0001') { #" +
                            "   <span>Cập nhật sau </span>" +
                            "# } else { #" +
                            "   #= kendo.toString(ThoiGianBatDau, 'dd/MM/yyyy') #" +
                            "# } #"
                            );
                            columns.Bound(c => c.ThoiGianKetThuc)
                            .Title("Thời gian kết thúc")
                            .Width(153)
                            .HtmlAttributes(new { @style = "text-align: center;" })
                            .ClientTemplate(
                            "# if (ThoiGianKetThuc == null || kendo.parseDate(ThoiGianKetThuc) == null || kendo.toString(kendo.parseDate(ThoiGianKetThuc), 'dd/MM/yyyy') == '01/01/0001') { #" +
                            "   <span>Cập nhật sau </span>" +
                            "# } else { #" +
                            "   #= kendo.toString(ThoiGianKetThuc, 'dd/MM/yyyy') #" +
                            "# } #"
                            );


                            columns.Bound(c => c.IsActived).Title("Trạng thái").ClientTemplate(
                            "# if(IsActived) { #" +
                            "<button type='button' class='btn btn-outline-success btn-sm btn-flat'>Đang hoạt động</button>" +
                            "# } else { #" +
                            "<button type='button' class='btn btn-outline-danger btn-sm btn-flat'>Không hoạt động</button>" +
                            "# } #").Width(153).HtmlAttributes(new { @class = "text-center" });
                        })
                        .Sortable()
                        .ToolBar(toolbar =>
                        {
                            toolbar.ClientTemplateId("GridToolbarTemplate");
                        })
                        .Resizable(x => x.Columns(true))
                        .Pageable()
                        .EnableCustomBinding(true)
                        .PersistSelection()
                        .Scrollable()
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .Model(model => model.Id(p => p.Id))
                        .Read(read => read.Action("GetList", "QuanLyDuAn")
                        .Data("gridDataFilter"))
                        .PageSize(SYS_CONFIG.PAGE_SIZE_DEFAULT)
                        .Events(e => e.Error("xoFunc.onErrorGrid"))
                        )
                        .Events(e => { e.DataBinding("xoFunc.onDataBindingGrid"); })
                        .Pageable(pager => pager
                        .Refresh(true).Input(true).Numeric(false)
                        .PageSizes(SYS_CONFIG.PAGE_SIZES))
                        .NoRecords(n => n.Template("Không có dữ liệu"))
                        )
                }
            </div><!-- /.container-fluid -->
        </section>
    </div>
@foreach (var tab in listtabs)
{
    if (tab.Id != "QuanLyDuAn")
    {
        <div class="tab-content" id="@tab.ControllerName@tab.ActionName">
        </div>
    }
}




@*TOOLBAR TEMPLATE*@
<script id="GridToolbarTemplate" type="text/html">
    @{
        <div style="width:100%;">
            <div style="width: 70%">
                @{
                    if (Model.IsXem)
                    {
                        <a class="btn btn-info ml-1" onclick="xemThongTin()"><i class="fa fa-eye"></i> Xem </a>
                    }
                    if (Model.IsThem)
                    {
                        <a class="btn btn-success ml-1" onclick="themThongTin()"><i class="fas fa-layer-plus"></i>&nbsp; Thêm</a>
                    }
                    if (Model.IsCapNhat)
                    {
                        <a class="btn btn-primary ml-1" onclick="suaThongTin()"><i class="fas fa-wrench"></i> Cập nhật </a>
                    }
                    if (Model.IsXoa)
                    {
                        <a class="btn btn-danger ml-1" onclick="xoaThongTin()"><i class="fa fa-trash" aria-hidden="true"></i>&nbsp; Xóa </a>
                    }
                }
            </div>
            <div style="width:30%;" class="input-group">
                <input id="TextSearch" type="text" class="form-control" placeholder="Tìm kiếm..." onchange="refreshGrid()">
                <span class="input-group-append">
                    <button onclick="refreshGrid()" class="btn btn-default" type="button"><i class="fas fa-search"></i></button>
                </span>
            </div>
        </div>
    }
</script>

<script>
    //Xem thông tin.
    function xemThongTin() {
        var itemSelectedIds = getListIdSelected();
        if (!checkMultiSelectInGrid(itemSelectedIds)) {
            return;
        }
        var url = '@Url.Action("ShowViewPopup", "QuanLyDuAn")' + "?id=" + itemSelectedIds[0];
        showModal(url, "lg");
    }

    //Thêm thông tin.
    function themThongTin() {
        var url = '@Url.Action("ShowInsertPopup", "QuanLyDuAn")';

        showModal(url, "lg");
    }

    //Sửa thông tin.
    function suaThongTin()
    {
        var itemSelectedIds = getListIdSelected();
        if(!checkMultiSelectInGrid(itemSelectedIds))
        {
            return;
        }
        var url = '@Url.Action("ShowUpdatePopup", "QuanLyDuAn")' + "?id=" + itemSelectedIds[0];
        showModal(url, "lg");
    }

    //xóa thông tin
    function xoaThongTin() {
        var itemSelectedIds = getListIdSelected();
        if (itemSelectedIds.length == 0) {
            showErrorNotify(noDataMessage);
            return;
        }

        var XoaThongTin = function () {
            showLoading(true);
            $.ajax({
                url: '@Url.Action("Delete", "QuanLyDuAn")',
                type: 'POST',
                dataType: 'json',
                data: {
                    listSelectedId: itemSelectedIds
                },
                success: function (data) {
                    if (data.IsSuccess) {
                        showSuccessNotify(deleteSuccess);
                        refreshGrid();
                    }
                    else {
                        showErrorNotify(data.Message);
                    }
                },
                error: function (request, status, err) {
                    showErrorNotify(errorMessage);
                }
            });
            showLoading(false);
        }
        return xoFunc.confirmDialogYesNo(deleteContent, titleConfirm, XoaThongTin);
    }

    function refreshGrid() {
        var grid = $("#gridData").data("kendoGrid");
        grid.clearSelection();
        grid.dataSource.page(0);
        showLoading(false);
    }

    function loadTabContent($tab) {

        var tabId = $tab.data('tab');
        $('.tab-content').each(function () {
            if (this.id !== "QuanLyDuAnIndexTab") {
                $(this).empty();
            }
        });
        $('.tab-content').removeClass('active show');
        var $tabPane = $('#' + tabId);
        
        $tabPane.addClass('active show');

        if ($tab.index() === 0) {
            return;
        }
      


        var controllerName = $tab.data('controller');
        var actionName = $tab.data('action');
        var url = '/' + controllerName + '/' + actionName;
        $.ajax({
            url: url,
            method: "GET",
            dataType: "html",
            success: function (data) {

                $tabPane.html(data);
            },
            error: function (xhr, status, error) {
                console.error("Lỗi khi load nội dung của controller " + controllerName + ": " + error);
            }
        });

    }

    $(document).on('click', '#mynavtabs .tab', function (e) {
        e.preventDefault();
        var $tab = $(this);


        $('#mynavtabs .tab').removeClass('active');

        $tab.addClass('active');
        loadTabContent($tab);
    });


    $(document).ready(function () {
        var $defaultTab = $('#mynavtabs .tab.active');
        if ($defaultTab.length === 0) {
            $defaultTab = $('#mynavtabs .tab').first();
            $defaultTab.addClass('active');
        }
        loadTabContent($defaultTab);

    });

</script>
