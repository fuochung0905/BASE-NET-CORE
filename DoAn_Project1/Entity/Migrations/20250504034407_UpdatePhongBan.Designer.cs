// <auto-generated />
using System;
using ENTITIES.DBContent;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ENTITIES.Migrations
{
    [DbContext(typeof(DoAnProject1Context))]
    [Migration("20250504034407_UpdatePhongBan")]
    partial class UpdatePhongBan
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ENTITIES.DBContent.CHAT_CONVERSATION", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<Guid>("MonHocId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MonHocId");

                    b.ToTable("CHAT_CONVERSATION");
                });

            modelBuilder.Entity("ENTITIES.DBContent.CHAT_CONVERSATIONMEMBER", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayThamGia")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("CHAT_CONVERSATIONMEMBER");
                });

            modelBuilder.Entity("ENTITIES.DBContent.CHAT_MESSAGE", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NguoiGuiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("NguoiGuiId");

                    b.ToTable("CHAT_MESSAGE");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_CHUCVU", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PhongBanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PhongBanId");

                    b.ToTable("DM_CHUCVUs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_DONVI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DM_DONVIs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_GIAIDOANDUAN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsThuyetTrinh")
                        .HasColumnType("bit");

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DM_GIAIDOANDUANs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_LOAIDUAN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsThuyetTrinh")
                        .HasColumnType("bit");

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DM_LOAIDUANs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_LOAITAIKHOAN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DM_LOAITAIKHOANs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_MONHOC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("GioBatDau")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("GioKetThuc")
                        .HasColumnType("time");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NienKhoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PhongBanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhongHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoLuongMax")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongThucTe")
                        .HasColumnType("int");

                    b.Property<int?>("SoTinChi")
                        .HasColumnType("int");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThuTrongTuan")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NienKhoaId");

                    b.HasIndex("PhongBanId");

                    b.ToTable("DM_MONHOC");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_NIENKHOA", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHienTai")
                        .HasColumnType("bit");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DM_NIENKHOA");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_PHONGBAN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DonViId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Ma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DonViId");

                    b.ToTable("DM_PHONGBANs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_TEAM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MonHocId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MonHocId");

                    b.ToTable("DM_TEAM");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_DANHSACHNGUOITHUCHIEN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DuAnId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NguoiThucHienId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TAIKHOANId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DuAnId");

                    b.HasIndex("TAIKHOANId");

                    b.ToTable("DUAN_DANHSACHNGUOITHUCHIENs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_LICHSUGIAOVIEC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CongViecId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiDangThucHien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SYS_TRANGTHAICONGVIECId")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CongViecId");

                    b.HasIndex("SYS_TRANGTHAICONGVIECId");

                    b.ToTable("DUAN_LICHSUGIAOVIECs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CongViecGiaiDoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CongViecLienQuanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DoKhoCongViec")
                        .HasColumnType("int");

                    b.Property<Guid>("DuAnId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DuKienDenNgay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DuKienTuNgay")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GiaiDoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("GioCongDuKien")
                        .HasColumnType("float");

                    b.Property<string>("HuongDanSuDungNhanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KetQuaCongViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayHoanThanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiKiemTraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NguoiThucHienId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("SoGioCong")
                        .HasColumnType("float");

                    b.Property<double?>("SoGioThucTe")
                        .HasColumnType("float");

                    b.Property<Guid?>("TAIKHOANId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenCongViec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ThoiGianTest")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ThucTeDenNgay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThucTeTuNgay")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TienDo")
                        .HasColumnType("float");

                    b.Property<double?>("TongThoiGianThucHien")
                        .HasColumnType("float");

                    b.Property<int>("TrangThaiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DuAnId");

                    b.HasIndex("GiaiDoanId");

                    b.HasIndex("TAIKHOANId");

                    b.HasIndex("TrangThaiId");

                    b.ToTable("DUAN_QUANLYCONGVIECs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC_CHITIET", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CongViecId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgayHoanThanh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SYS_TRANGTHAICONGVIECId")
                        .HasColumnType("int");

                    b.Property<double?>("SoGioCong")
                        .HasColumnType("float");

                    b.Property<string>("TenCongViecCon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThaiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CongViecId");

                    b.HasIndex("SYS_TRANGTHAICONGVIECId");

                    b.ToTable("DUAN_QUANLYCONGVIEC_CHITIET");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC_LOI_TEPDINHKEM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DoLon")
                        .HasColumnType("float");

                    b.Property<Guid>("LienKetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMoRong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DUAN_QUANLYCONGVIEC_LOI_TEPDINHKEMs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC_PHANHOI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LienKetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NguoiGuiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoiDungHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LienKetId");

                    b.ToTable("DUAN_QUANLYCONGVIEC_PHANHOIs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC_TEPDINHKEM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DoLon")
                        .HasColumnType("float");

                    b.Property<Guid>("LienKetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMoRong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LienKetId");

                    b.ToTable("DUAN_QUANLYCONGVIEC_TEPDINHKEMs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYDUAN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GiaiDoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCanhBaoHetHan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LoaiDuAn")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaDuAn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MonHocId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDuAn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TienDo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GiaiDoanId");

                    b.HasIndex("LoaiDuAn");

                    b.HasIndex("MonHocId");

                    b.ToTable("DUAN_QUANLYDUANs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.HETHONG_THONGBAO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HETHONG_THONGBAOs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.HETHONG_THONGBAO_TEPDINHKEM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BieuMauId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DoLon")
                        .HasColumnType("float");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LienKetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMoRong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LienKetId");

                    b.ToTable("HETHONG_THONGBAO_TEPDINHKEMs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.MONHOC_NGUOITHAMGIA", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MonHocId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MonHocId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("MONHOC_NGUOITHAMGIA");
                });

            modelBuilder.Entity("ENTITIES.DBContent.PHANQUYEN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCapNhat")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDuyet")
                        .HasColumnType("bit");

                    b.Property<bool>("IsThem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsThongKe")
                        .HasColumnType("bit");

                    b.Property<bool>("IsXem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsXoa")
                        .HasColumnType("bit");

                    b.Property<Guid>("VaiTroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VaiTroId");

                    b.ToTable("PHANQUYENs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.PHANQUYEN_NHOMQUYEN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PHANQUYEN_NHOMQUYENs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.PHONGBAN_NGUOITHAMGIA", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PhongBanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PhongBanId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("PHONGBAN_NGUOITHAMGIA");
                });

            modelBuilder.Entity("ENTITIES.DBContent.QUANLYDUAN_NGUOIDUNG", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DuAnId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DuAnId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("QUANLYDUAN_NGUOIDUNGs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.SYS_MENU", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CoCapNhat")
                        .HasColumnType("bit");

                    b.Property<bool>("CoDuyet")
                        .HasColumnType("bit");

                    b.Property<bool>("CoThem")
                        .HasColumnType("bit");

                    b.Property<bool>("CoThongKe")
                        .HasColumnType("bit");

                    b.Property<bool>("CoXem")
                        .HasColumnType("bit");

                    b.Property<bool>("CoXoa")
                        .HasColumnType("bit");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowMenu")
                        .HasColumnType("bit");

                    b.Property<Guid>("NhomQuyenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NhomQuyenId");

                    b.ToTable("SYS_MENUs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.SYS_TRANGTHAICONGVIEC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SYS_TRANGTHAICONGVIECs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.TAIKHOAN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ChucVuID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountLoginFail")
                        .HasColumnType("int");

                    b.Property<Guid?>("DonViId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DuAnId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HoLot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFirstLogin")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LoaiTaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhauSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NguoiQuanLyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PhongBanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeChangePassword")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeLoginFail")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VaiTroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChucVuID");

                    b.HasIndex("DonViId");

                    b.HasIndex("DuAnId");

                    b.HasIndex("LoaiTaiKhoanId");

                    b.HasIndex("PhongBanId");

                    b.HasIndex("VaiTroId");

                    b.ToTable("TAIKHOANs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.TEAM_NGUOITHAMGIA", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsLeader")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaiKhoanId");

                    b.HasIndex("TeamId");

                    b.ToTable("TEAM_NGUOITHAMGIA");
                });

            modelBuilder.Entity("ENTITIES.DBContent.THONGBAO_NGUOIDUNG", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Delivered_At")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Is_Read")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Read_At")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TaiKhoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ThongBaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaiKhoanId");

                    b.HasIndex("ThongBaoId");

                    b.ToTable("THONGBAO_NGUOIDUNGs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.VAITRO", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgaySua")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayXoa")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiSua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VAITROs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.CHAT_CONVERSATION", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DM_MONHOC", "DM_MONHOC")
                        .WithMany("cHAT_CONVERSATIONs")
                        .HasForeignKey("MonHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DM_MONHOC");
                });

            modelBuilder.Entity("ENTITIES.DBContent.CHAT_CONVERSATIONMEMBER", b =>
                {
                    b.HasOne("ENTITIES.DBContent.CHAT_CONVERSATION", "CHAT_CONVERSATION")
                        .WithMany("CHAT_CONVERSATIONMEMBERs")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTITIES.DBContent.TAIKHOAN", "TAIKHOAN")
                        .WithMany("CHAT_CONVERSATIONMEMBERs")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CHAT_CONVERSATION");

                    b.Navigation("TAIKHOAN");
                });

            modelBuilder.Entity("ENTITIES.DBContent.CHAT_MESSAGE", b =>
                {
                    b.HasOne("ENTITIES.DBContent.CHAT_CONVERSATION", "Conversation")
                        .WithMany("ChatMessages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTITIES.DBContent.TAIKHOAN", "TAIKHOAN")
                        .WithMany("cHAT_MESSAGEs")
                        .HasForeignKey("NguoiGuiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("TAIKHOAN");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_CHUCVU", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DM_PHONGBAN", "DM_PHONGBAN")
                        .WithMany("dM_CHUCVUs")
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DM_PHONGBAN");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_MONHOC", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DM_NIENKHOA", "DM_NIENKHOA")
                        .WithMany("dM_MONHOCs")
                        .HasForeignKey("NienKhoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTITIES.DBContent.DM_PHONGBAN", "DM_PHONGBAN")
                        .WithMany("dM_MONHOCs")
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DM_NIENKHOA");

                    b.Navigation("DM_PHONGBAN");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_PHONGBAN", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DM_DONVI", "DM_DONVI")
                        .WithMany("DM_PHONGBANs")
                        .HasForeignKey("DonViId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DM_DONVI");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_TEAM", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DM_MONHOC", "DM_MONHOC")
                        .WithMany("dM_TEAMs")
                        .HasForeignKey("MonHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DM_MONHOC");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_DANHSACHNGUOITHUCHIEN", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DUAN_QUANLYDUAN", "DUAN_QUANLYDUAN")
                        .WithMany("DUAN_DANHSACHNGUOITHUCHIENs")
                        .HasForeignKey("DuAnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTITIES.DBContent.TAIKHOAN", "TAIKHOAN")
                        .WithMany("DUAN_DANHSACHNGUOITHUCHIENs")
                        .HasForeignKey("TAIKHOANId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DUAN_QUANLYDUAN");

                    b.Navigation("TAIKHOAN");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_LICHSUGIAOVIEC", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC", "DUAN_QUANLYCONGVIEC")
                        .WithMany("DUAN_LICHSUGIAOVIECs")
                        .HasForeignKey("CongViecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTITIES.DBContent.SYS_TRANGTHAICONGVIEC", null)
                        .WithMany("DUAN_LICHSUGIAOVIECs")
                        .HasForeignKey("SYS_TRANGTHAICONGVIECId");

                    b.Navigation("DUAN_QUANLYCONGVIEC");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DUAN_QUANLYDUAN", "DUAN_QUANLYDUAN")
                        .WithMany("dUAN_QUANLYCONGVIECs")
                        .HasForeignKey("DuAnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTITIES.DBContent.DM_GIAIDOANDUAN", "DM_GIAIDOANDUAN")
                        .WithMany("qUANLYCONGVIECs")
                        .HasForeignKey("GiaiDoanId");

                    b.HasOne("ENTITIES.DBContent.TAIKHOAN", null)
                        .WithMany("DUAN_QUANLYCONGVIECs")
                        .HasForeignKey("TAIKHOANId");

                    b.HasOne("ENTITIES.DBContent.SYS_TRANGTHAICONGVIEC", "SYS_TRANGTHAICONGVIEC")
                        .WithMany("DUAN_QUANLYCONGVIEC")
                        .HasForeignKey("TrangThaiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DM_GIAIDOANDUAN");

                    b.Navigation("DUAN_QUANLYDUAN");

                    b.Navigation("SYS_TRANGTHAICONGVIEC");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC_CHITIET", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC", "DUAN_QUANLYCONGVIEC")
                        .WithMany("DUAN_QUANLYCONGVIEC_CHITIET")
                        .HasForeignKey("CongViecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTITIES.DBContent.SYS_TRANGTHAICONGVIEC", null)
                        .WithMany("dUAN_QUANLYCONGVIEC_CHITIETs")
                        .HasForeignKey("SYS_TRANGTHAICONGVIECId");

                    b.Navigation("DUAN_QUANLYCONGVIEC");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC_PHANHOI", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC", "DUAN_QUANLYCONGVIEC")
                        .WithMany("dUAN_QUANLYCONGVIEC_PHANHOIs")
                        .HasForeignKey("LienKetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DUAN_QUANLYCONGVIEC");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC_TEPDINHKEM", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC", "DUAN_QUANLYCONGVIEC")
                        .WithMany("dUAN_QUANLYCONGVIEC_TEPDINHKEMs")
                        .HasForeignKey("LienKetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DUAN_QUANLYCONGVIEC");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYDUAN", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DM_GIAIDOANDUAN", "DM_GIAIDOANDUAN")
                        .WithMany("dUAN_QUANLYDUANs")
                        .HasForeignKey("GiaiDoanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ENTITIES.DBContent.DM_LOAIDUAN", "DM_LOAIDUAN")
                        .WithMany("dUAN_QUANLYDUANs")
                        .HasForeignKey("LoaiDuAn")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ENTITIES.DBContent.DM_MONHOC", "DM_MONHOC")
                        .WithMany("dUAN_QUANLYDUANs")
                        .HasForeignKey("MonHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DM_GIAIDOANDUAN");

                    b.Navigation("DM_LOAIDUAN");

                    b.Navigation("DM_MONHOC");
                });

            modelBuilder.Entity("ENTITIES.DBContent.HETHONG_THONGBAO_TEPDINHKEM", b =>
                {
                    b.HasOne("ENTITIES.DBContent.HETHONG_THONGBAO", "HETHONG_THONGBAO")
                        .WithMany("HETHONG_THONGBAO_TEPDINHKEMs")
                        .HasForeignKey("LienKetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HETHONG_THONGBAO");
                });

            modelBuilder.Entity("ENTITIES.DBContent.MONHOC_NGUOITHAMGIA", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DM_MONHOC", "DM_MONHOC")
                        .WithMany("mONHOC_NGUOITHAMGIAs")
                        .HasForeignKey("MonHocId");

                    b.HasOne("ENTITIES.DBContent.TAIKHOAN", "TAIKHOAN")
                        .WithMany("mONHOC_NGUOITHAMGIAs")
                        .HasForeignKey("TaiKhoanId");

                    b.Navigation("DM_MONHOC");

                    b.Navigation("TAIKHOAN");
                });

            modelBuilder.Entity("ENTITIES.DBContent.PHANQUYEN", b =>
                {
                    b.HasOne("ENTITIES.DBContent.VAITRO", "VAITRO")
                        .WithMany("PHANQUYENs")
                        .HasForeignKey("VaiTroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VAITRO");
                });

            modelBuilder.Entity("ENTITIES.DBContent.PHONGBAN_NGUOITHAMGIA", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DM_PHONGBAN", "DM_PHONGBAN")
                        .WithMany("dM_PHONGBAN_NHGIA")
                        .HasForeignKey("PhongBanId");

                    b.HasOne("ENTITIES.DBContent.TAIKHOAN", "TAIKHOAN")
                        .WithMany("pHONGBAN_NGUOITHAMGIAs")
                        .HasForeignKey("TaiKhoanId");

                    b.Navigation("DM_PHONGBAN");

                    b.Navigation("TAIKHOAN");
                });

            modelBuilder.Entity("ENTITIES.DBContent.QUANLYDUAN_NGUOIDUNG", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DUAN_QUANLYDUAN", "DUAN_QUANLYDUAN")
                        .WithMany("QUANLYDUAN_NGUOIDUNGs")
                        .HasForeignKey("DuAnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTITIES.DBContent.TAIKHOAN", "TAIKHOAN")
                        .WithMany("QUANLYDUAN_NGUOIDUNGs")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DUAN_QUANLYDUAN");

                    b.Navigation("TAIKHOAN");
                });

            modelBuilder.Entity("ENTITIES.DBContent.SYS_MENU", b =>
                {
                    b.HasOne("ENTITIES.DBContent.PHANQUYEN_NHOMQUYEN", "PHANQUYEN_NHOMQUYEN")
                        .WithMany("Menus")
                        .HasForeignKey("NhomQuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PHANQUYEN_NHOMQUYEN");
                });

            modelBuilder.Entity("ENTITIES.DBContent.TAIKHOAN", b =>
                {
                    b.HasOne("ENTITIES.DBContent.DM_CHUCVU", "CHUCVU")
                        .WithMany("Taikhoans")
                        .HasForeignKey("ChucVuID");

                    b.HasOne("ENTITIES.DBContent.DM_DONVI", "DM_DONVI")
                        .WithMany("TAIKHOANs")
                        .HasForeignKey("DonViId");

                    b.HasOne("ENTITIES.DBContent.DUAN_QUANLYDUAN", "DUAN_QUANLYDUAN")
                        .WithMany("tAIKHOANs")
                        .HasForeignKey("DuAnId");

                    b.HasOne("ENTITIES.DBContent.DM_LOAITAIKHOAN", "DM_LOAITAIKHOAN")
                        .WithMany("Taikhoans")
                        .HasForeignKey("LoaiTaiKhoanId");

                    b.HasOne("ENTITIES.DBContent.DM_PHONGBAN", "DM_PHONGBAN")
                        .WithMany("Taikhoans")
                        .HasForeignKey("PhongBanId");

                    b.HasOne("ENTITIES.DBContent.VAITRO", "VAITRO")
                        .WithMany("TAIKHOANs")
                        .HasForeignKey("VaiTroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CHUCVU");

                    b.Navigation("DM_DONVI");

                    b.Navigation("DM_LOAITAIKHOAN");

                    b.Navigation("DM_PHONGBAN");

                    b.Navigation("DUAN_QUANLYDUAN");

                    b.Navigation("VAITRO");
                });

            modelBuilder.Entity("ENTITIES.DBContent.TEAM_NGUOITHAMGIA", b =>
                {
                    b.HasOne("ENTITIES.DBContent.TAIKHOAN", "TAIKHOAN")
                        .WithMany("tEAM_NGUOITHAMGIAs")
                        .HasForeignKey("TaiKhoanId");

                    b.HasOne("ENTITIES.DBContent.DM_TEAM", "DM_TEAM")
                        .WithMany("tEAM_NGUOITHAMGIAs")
                        .HasForeignKey("TeamId");

                    b.Navigation("DM_TEAM");

                    b.Navigation("TAIKHOAN");
                });

            modelBuilder.Entity("ENTITIES.DBContent.THONGBAO_NGUOIDUNG", b =>
                {
                    b.HasOne("ENTITIES.DBContent.TAIKHOAN", "TAIKHOAN")
                        .WithMany("tHONGBAO_NGUOIDUNGs")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTITIES.DBContent.HETHONG_THONGBAO", "HETHONG_THONGBAO")
                        .WithMany("tHONGBAO_NGUOIDUNGs")
                        .HasForeignKey("ThongBaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HETHONG_THONGBAO");

                    b.Navigation("TAIKHOAN");
                });

            modelBuilder.Entity("ENTITIES.DBContent.CHAT_CONVERSATION", b =>
                {
                    b.Navigation("CHAT_CONVERSATIONMEMBERs");

                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_CHUCVU", b =>
                {
                    b.Navigation("Taikhoans");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_DONVI", b =>
                {
                    b.Navigation("DM_PHONGBANs");

                    b.Navigation("TAIKHOANs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_GIAIDOANDUAN", b =>
                {
                    b.Navigation("dUAN_QUANLYDUANs");

                    b.Navigation("qUANLYCONGVIECs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_LOAIDUAN", b =>
                {
                    b.Navigation("dUAN_QUANLYDUANs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_LOAITAIKHOAN", b =>
                {
                    b.Navigation("Taikhoans");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_MONHOC", b =>
                {
                    b.Navigation("cHAT_CONVERSATIONs");

                    b.Navigation("dM_TEAMs");

                    b.Navigation("dUAN_QUANLYDUANs");

                    b.Navigation("mONHOC_NGUOITHAMGIAs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_NIENKHOA", b =>
                {
                    b.Navigation("dM_MONHOCs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_PHONGBAN", b =>
                {
                    b.Navigation("Taikhoans");

                    b.Navigation("dM_CHUCVUs");

                    b.Navigation("dM_MONHOCs");

                    b.Navigation("dM_PHONGBAN_NHGIA");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DM_TEAM", b =>
                {
                    b.Navigation("tEAM_NGUOITHAMGIAs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYCONGVIEC", b =>
                {
                    b.Navigation("DUAN_LICHSUGIAOVIECs");

                    b.Navigation("DUAN_QUANLYCONGVIEC_CHITIET");

                    b.Navigation("dUAN_QUANLYCONGVIEC_PHANHOIs");

                    b.Navigation("dUAN_QUANLYCONGVIEC_TEPDINHKEMs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.DUAN_QUANLYDUAN", b =>
                {
                    b.Navigation("DUAN_DANHSACHNGUOITHUCHIENs");

                    b.Navigation("QUANLYDUAN_NGUOIDUNGs");

                    b.Navigation("dUAN_QUANLYCONGVIECs");

                    b.Navigation("tAIKHOANs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.HETHONG_THONGBAO", b =>
                {
                    b.Navigation("HETHONG_THONGBAO_TEPDINHKEMs");

                    b.Navigation("tHONGBAO_NGUOIDUNGs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.PHANQUYEN_NHOMQUYEN", b =>
                {
                    b.Navigation("Menus");
                });

            modelBuilder.Entity("ENTITIES.DBContent.SYS_TRANGTHAICONGVIEC", b =>
                {
                    b.Navigation("DUAN_LICHSUGIAOVIECs");

                    b.Navigation("DUAN_QUANLYCONGVIEC");

                    b.Navigation("dUAN_QUANLYCONGVIEC_CHITIETs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.TAIKHOAN", b =>
                {
                    b.Navigation("CHAT_CONVERSATIONMEMBERs");

                    b.Navigation("DUAN_DANHSACHNGUOITHUCHIENs");

                    b.Navigation("DUAN_QUANLYCONGVIECs");

                    b.Navigation("QUANLYDUAN_NGUOIDUNGs");

                    b.Navigation("cHAT_MESSAGEs");

                    b.Navigation("mONHOC_NGUOITHAMGIAs");

                    b.Navigation("pHONGBAN_NGUOITHAMGIAs");

                    b.Navigation("tEAM_NGUOITHAMGIAs");

                    b.Navigation("tHONGBAO_NGUOIDUNGs");
                });

            modelBuilder.Entity("ENTITIES.DBContent.VAITRO", b =>
                {
                    b.Navigation("PHANQUYENs");

                    b.Navigation("TAIKHOANs");
                });
#pragma warning restore 612, 618
        }
    }
}
